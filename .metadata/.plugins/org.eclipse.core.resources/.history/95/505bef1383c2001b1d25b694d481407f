package p04.map;

import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.Vector;

//HashTable: Map계열, Synchronized 메소드로 구성
//		   : 비동기화메소드: HashMap
public class HashTableEx1 {

	public static void main(String[] args) {

		Hashtable<String, String> ht = new Hashtable<String, String>();
		Map<String, String> ht2 = new Hashtable<String, String>();

		ht2.put("name ", " 홍길동");
		ht2.put("age ", " 20");
		ht2.put("address ", " 서울");
		System.out.println(ht2);
		System.out.println("-------------");
		
		// keySet(), iterator()
		Set<String> keySet = ht2.keySet();
		Iterator<String> it2 = keySet.iterator();
		while (it2.hasNext()) {
			String key = it2.next();
			String value = ht2.get(key);
			System.out.println("키: " + key + ", 값: " + value);
		}
		System.out.println("-------------");

		// Enumeration<K> keys()
//		Enumeration<String> e = ht.keys();
//		while (e.hasMoreElements()) {
//			String k = e.nextElement();
//			String v = ht2.get(k);
//			System.out.println("키: " + k + ", 값: " + v);
//		}
//		
//		Vector<String> v = new Vector<>(ht2.keySet());
//		for (Enumeration<String> e2 = v.elements(); e.hasMoreElements();) {
//			String key = e2.nextElement();
//			String value = ht2.get(key);
//			System.out.println("키: " + key + ", 값: " + value);
//		}
	}

}
